package com.github.se.cyrcle.model.parking.offline

import androidx.room.Database
import androidx.room.RoomDatabase
import androidx.room.TypeConverters
import com.github.se.cyrcle.io.serializer.LocationAdapter
import com.github.se.cyrcle.io.serializer.ParkingAdapter
import com.github.se.cyrcle.io.serializer.StringListAdapter
import com.github.se.cyrcle.model.parking.Parking
import com.github.se.cyrcle.model.parking.online.ParkingImageListAdapter

/**
 * Database for parkings. It is used to store parkings locally
 *
 * As for the DAO, it is not implemented in this project since it is auto generated by Room during
 * compilation
 */
@Database(entities = [Parking::class], version = 1, exportSchema = false)
@TypeConverters(StringListAdapter::class, LocationAdapter::class, ParkingAdapter::class, ParkingImageListAdapter::class)
abstract class ParkingDatabase : RoomDatabase() {

  /** DAO generated by Room */
  abstract val parkingDao: ParkingDao

  companion object {
    /** Database name */
    const val DB_NAME = "parking_database.db"
  }
}
